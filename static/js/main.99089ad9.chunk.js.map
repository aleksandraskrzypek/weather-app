{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","cityName","setCityName","temp1","setTemp1","type1","setType1","temp2","setTemp2","temp3","setTemp3","temp4","setTemp4","temp5","setTemp5","imgURL1","setImgURL1","imgURL2","setImgURL2","imgURL3","setImgURL3","imgURL4","setImgURL4","imgURL5","setImgURL5","today","Date","tomorrow","dayaftertomorrow","dayaftertomorrow2","dayaftertomorrow3","setDate","getDate","dateBuilder","d","day","getDay","className","value","onChange","e","target","placeholder","onClick","axios","get","then","response","console","log","data","list","main","temp","weather","id","catch","error","Math","round","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99089ad9.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./weather.css\"\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\nimport \"./owfont-master/css/owfont-regular.css\"\r\n\r\n\r\n\r\nfunction Weather() {\r\n    const [cityName, setCityName] = useState('');\r\n    const [temp1, setTemp1] = useState('')\r\n    const [type1, setType1] = useState('')\r\n\r\n    const [temp2, setTemp2] = useState('')\r\n\r\n    const [temp3, setTemp3] = useState('')\r\n\r\n    const [temp4, setTemp4] = useState('')\r\n\r\n    const [temp5, setTemp5] = useState('')\r\n\r\n    const [imgURL1, setImgURL1] = useState('')\r\n    const [imgURL2, setImgURL2] = useState('')\r\n    const [imgURL3, setImgURL3] = useState('')\r\n    const [imgURL4, setImgURL4] = useState('')\r\n    const [imgURL5, setImgURL5] = useState('')\r\n\r\n    let today = new Date();\r\n    let tomorrow = new Date();\r\n    let dayaftertomorrow = new Date();\r\n    let dayaftertomorrow2 = new Date();\r\n    let dayaftertomorrow3 = new Date();\r\n\r\n    tomorrow.setDate(today.getDate() + 1)\r\n    dayaftertomorrow.setDate(tomorrow.getDate() + 1)\r\n    dayaftertomorrow2.setDate(tomorrow.getDate() + 2)\r\n    dayaftertomorrow3.setDate(tomorrow.getDate() + 3)\r\n    \r\n\r\n  const handleSubmit = () => {\r\n\r\n          axios.get('https://api.openweathermap.org/data/2.5/forecast?q='+`${cityName}`+'&units=metric&APPID=af8caf69fddab502ce9c5b842dd05b56')\r\n  \r\n            .then(function (response) {\r\n\r\n            console.log(response)\r\n\r\n            setTemp1(response.data.list[0].main.temp)\r\n            setType1(response.data.list[0].weather[0].main)\r\n\r\n            setTemp2(response.data.list[1].main.temp)\r\n\r\n            setTemp3(response.data.list[2].main.temp)\r\n\r\n            setTemp4(response.data.list[3].main.temp)\r\n\r\n            setTemp5(response.data.list[4].main.temp)\r\n    \r\n\r\n            setImgURL1(`owf owf-${response.data.list[0].weather[0].id} owf-myx`)\r\n            setImgURL2(`owf owf-${response.data.list[1].weather[0].id} owf-5x`)\r\n            setImgURL3(`owf owf-${response.data.list[2].weather[0].id} owf-5x`)\r\n            setImgURL4(`owf owf-${response.data.list[3].weather[0].id} owf-5x`)\r\n            setImgURL5(`owf owf-${response.data.list[4].weather[0].id} owf-5x`)\r\n\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        }\r\n\r\n        \r\n\r\n      const dateBuilder = (d) => {\r\n        let days = ['SUNDAY','MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY'];\r\n        \r\n        let day = days[d.getDay()]\r\n\r\n        return `${day}`\r\n      }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"weather-head\">\r\n            <div className=\"weather-body\">\r\n                <div className=\"search-item\">\r\n                    <input \r\n                        className=\"input-search-name\"\r\n                        value={cityName}\r\n                        onChange={e => setCityName(e.target.value)}\r\n                        placeholder=\"Enter City..\" \r\n                    />\r\n                    <button onClick={handleSubmit} className=\"button-search\">SEARCH</button>\r\n                </div>\r\n\r\n                <div className=\"theday\">\r\n                    <div className=\"iconoftheday\">\r\n                        <i className={imgURL1}></i>\r\n                    </div>\r\n                    <div className='restoftheday'>\r\n                        <p className=\"day\">{dateBuilder(today)}</p>\r\n                        <h1>{cityName}</h1>\r\n                        <p className=\"temp\">{Math.round(temp1)} °C</p>\r\n                        <p className=\"type\">{type1}</p>\r\n                    </div>\r\n\r\n                   \r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"day-elements\">\r\n                    <div className=\"element\">\r\n                        <p className=\"day\">{dateBuilder(tomorrow)}</p>\r\n                        <i className={imgURL2}></i>\r\n                        <p className=\"temp\">{Math.round(temp2)} °C</p>\r\n                    </div>\r\n                    <div className=\"element\">\r\n                        <p className=\"day\">{dateBuilder(dayaftertomorrow)}</p>\r\n                        <i className={imgURL3}></i>\r\n                        <p className=\"temp\">{Math.round(temp3)} °C</p>\r\n                    </div>\r\n                    <div className=\"element\">\r\n                        <p className=\"day\">{dateBuilder(dayaftertomorrow2)}</p>\r\n                        <i className={imgURL4}></i>\r\n                        <p className=\"temp\">{Math.round(temp4)} °C</p>\r\n                    </div>\r\n                    <div className=\"element\">\r\n                        <p className=\"day\">{dateBuilder(dayaftertomorrow3)}</p>\r\n                        <i className={imgURL5}></i>\r\n                        <p className=\"temp\">{Math.round(temp5)} °C</p>\r\n                    </div>\r\n                </div>\r\n        \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import './App.css';\nimport Weather from \"./Weather\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Weather /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}